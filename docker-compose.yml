services:
  master:
    container_name: app-master
    build:
      context: ./master
      dockerfile: Dockerfile
    image: master:dev
    environment:
      KAFKA_BROKER: 'kafka:9092'
      MASTER_KAFKA_CLIENT_ID: 'master'
      MASTER_KAFKA_GROUP_ID: 'master-group'
      POSTGRES_HOST: 'postgres'
      POSTGRES_PORT: '5432'
      POSTGRES_USER: 'postgres'
      POSTGRES_PASSWORD: 'password'
      POSTGRES_DATABASE_MASTER: 'master'
    volumes:
      - ./master:/home/node/app
    ports:
      - "4000:3000"
    extra_hosts:
      - "host.docker.internal:172.17.0.1"
    depends_on:
      - kafka

  node-1:
    container_name: app-node-1
    build:
      context: ./node-1
      dockerfile: Dockerfile
    image: node-1:dev
    environment:
      KAFKA_BROKER: 'kafka:9092'
      NODE1_KAFKA_CLIENT_ID: 'node1'
      NODE1_KAFKA_GROUP_ID: 'node1-group'
      POSTGRES_HOST: 'postgres'
      POSTGRES_PORT: '5432'
      POSTGRES_USER: 'postgres'
      POSTGRES_PASSWORD: 'password'
      POSTGRES_DATABASE_NODE1: 'node_1'
    volumes:
      - ./node-1:/home/node/app
    ports:
      - "4001:3000"
    extra_hosts:
      - "host.docker.internal:172.17.0.1"
    depends_on:
      - master

  node-2:
    container_name: app-node-2
    build:
      context: ./node-2
      dockerfile: Dockerfile
    image: node-2:dev
    environment:
      KAFKA_BROKER: 'kafka:9092'
      NODE2_KAFKA_CLIENT_ID: 'node2'
      NODE2_KAFKA_GROUP_ID: 'node2-group'
      POSTGRES_HOST: 'postgres'
      POSTGRES_PORT: '5432'
      POSTGRES_USER: 'postgres'
      POSTGRES_PASSWORD: 'password'
      POSTGRES_DATABASE_NODE2: 'node_2'
    volumes:
      - ./node-2:/home/node/app
    ports:
      - "4002:3000"
    extra_hosts:
      - "host.docker.internal:172.17.0.1"
    depends_on:
      - node-1

  postgres:
    build: postgres/.
    container_name: app-postgres
    image: postgres:dev
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_MULTIPLE_DATABASES: master,node_1,node_2
    volumes:
      - app-postgres-data:/var/lib/postgresql/data
      - ./postgres/scripts:/docker-entrypoint-initdb.d
    ports:
      - "5434:5432"
    extra_hosts:
      - "host.docker.internal:172.17.0.1"

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: app-zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
    extra_hosts:
      - "host.docker.internal:172.17.0.1"
    restart: on-failure

  kafka:
    image: confluentinc/cp-kafka:6.0.0
    container_name: app-kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
      - "9094:9094"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_LISTENERS: INTERNAL://:9092,OUTSIDE://:9094
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka:9092,OUTSIDE://kafka:9094
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_LOG_RETENTION_HOURS: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'
      KAFKA_NUM_PARTITIONS: 3
    extra_hosts:
      - "host.docker.internal:172.17.0.1"
    restart: on-failure

  control-center:
    image: confluentinc/cp-enterprise-control-center:6.0.0
    container_name: control-center
    hostname: control-center
    depends_on:
      - kafka
    ports:
      - "9021:9021"
    environment:
      CONTROL_CENTER_BOOTSTRAP_SERVERS: 'kafka:9092'
      CONTROL_CENTER_REPLICATION_FACTOR: 1
      CONTROL_CENTER_CONNECT_CLUSTER: http://kafka-connect:8083
      PORT: 9021
    extra_hosts:
      - "host.docker.internal:172.17.0.1"
    restart: on-failure

volumes:
  app-postgres-data:
    driver: local
